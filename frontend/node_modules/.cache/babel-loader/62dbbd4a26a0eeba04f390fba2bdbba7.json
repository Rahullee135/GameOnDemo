{"ast":null,"code":"import _defineProperty from\"C:/Users/rahullee/Desktop/gamonDemo/gamonDemo/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"C:/Users/rahullee/Desktop/gamonDemo/gamonDemo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Plotly from\"plotly.js-basic-dist\";import createPlotlyComponent from\"react-plotly.js/factory\";import\"./metricGraph.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Plot=createPlotlyComponent(Plotly);var _ref=\"\",_ref2=_slicedToArray(_ref,2),progress=_ref2[0],setProgress=_ref2[1];function MetricGraph(props){var _ref4;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{class:\"graph\",children:[/*#__PURE__*/_jsx(Plot,{data:[_defineProperty({x:props.metTime,y:props.metValues,hovertemplate:\"<b>%{text}</b>\",text:props.activity,showLegend:false,type:\"scatter\",mode:\"line\",marker:{enabled:false},line:{shape:\"spline\",smoothing:0.8}},\"marker\",{color:\"#87CEEB\",size:\"0\"})],layout:(_ref4={X:0,xanchor:\"left\",title:\"Total GPU Usage\",width:785,height:200,margin:{l:90,r:20,b:40,t:20,pad:5}},_defineProperty(_ref4,\"title\",false),_defineProperty(_ref4,\"xref\",400),_defineProperty(_ref4,\"text\",\"GpuUsage\"),_defineProperty(_ref4,\"borderRadius\",20),_defineProperty(_ref4,\"xaxis\",{autorange:true,title:{text:\"seconds\",font:{family:\"Courier New, monospace\",size:16}}// rangeslider: {\n//   range: [\"00:00:00\", \"00:01:60\"],\n//   borderColor: \"blue\",\n//   bgColor: \"grey\",\n// },\n}),_defineProperty(_ref4,\"yaxis\",{title:{text:props.unit,font:{family:\"Courier New, monospace\",size:16}}}),_defineProperty(_ref4,\"plot_bgcolor\",\"#F5F5F5\"),_defineProperty(_ref4,\"plot_height\",300),_ref4),config:{displayModeBar:false}}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"48%\",padding:\"2%\"},children:props.text})]})});}export default MetricGraph;// import React from \"react\";\n// import Highcharts from \"highcharts\";\n// import HighchartsReact from \"highcharts-react-official\";\n// function MetricGraph(props) {\n//   console.log(props.metValue, \"graph value\");\n//   console.log(props.metTime, \"graph time\");\n//   const options = {\n//     xAxis: {\n//       categories: [1, 2, 3],\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 3],\n//       },\n//     ],\n//     // events: {\n//     //   load: function () {\n//     //     // set up the updating of the chart each second\n//     //     var series = this.series[0];\n//     //     var x = new Date(props.time * 1000).toISOString().substr(14, 5);\n//     //     var y = props.value;\n//     //     series.addPoint([x, y], true, true);\n//     //   },\n//     // },\n//   };\n//   return (\n//     <div>\n//       <HighchartsReact highcharts={Highcharts} options={options} />\n//       <h1>{/* {props.value},{props.time} */}</h1>\n//     </div>\n//   );\n// }\n// export default MetricGraph;","map":{"version":3,"names":["React","useState","Plotly","createPlotlyComponent","Plot","progress","setProgress","MetricGraph","props","x","metTime","y","metValues","hovertemplate","text","activity","showLegend","type","mode","marker","enabled","line","shape","smoothing","color","size","X","xanchor","title","width","height","margin","l","r","b","t","pad","autorange","font","family","unit","displayModeBar","marginLeft","padding"],"sources":["C:/Users/rahullee/Desktop/gamonDemo/gamonDemo/frontend/src/components/Graph/MetricGraph.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport \"./metricGraph.css\";\n\nconst Plot = createPlotlyComponent(Plotly);\nconst [progress, setProgress] = \"\";\n\nfunction MetricGraph(props) {\n  return (\n    <>\n      <div class=\"graph\">\n        <Plot\n          data={[\n            {\n              x: props.metTime,\n              y: props.metValues,\n              hovertemplate: \"<b>%{text}</b>\",\n              text: props.activity,\n              showLegend: false,\n              type: \"scatter\",\n              mode: \"line\",\n\n              marker: { enabled: false },\n              line: { shape: \"spline\", smoothing: 0.8 },\n              marker: { color: \"#87CEEB\", size: \"0\" },\n            },\n          ]}\n          layout={{\n            X: 0,\n            xanchor: \"left\",\n            title: \"Total GPU Usage\",\n            width: 785,\n            height: 200,\n            margin: { l: 90, r: 20, b: 40, t: 20, pad: 5 },\n            title: false,\n            xref: 400,\n\n            text: \"GpuUsage\",\n            borderRadius: 20,\n            xaxis: {\n              autorange: true,\n              title: {\n                text: \"seconds\",\n                font: {\n                  family: \"Courier New, monospace\",\n                  size: 16,\n                },\n              },\n              // rangeslider: {\n              //   range: [\"00:00:00\", \"00:01:60\"],\n              //   borderColor: \"blue\",\n              //   bgColor: \"grey\",\n              // },\n            },\n\n            yaxis: {\n              title: {\n                text: props.unit,\n                font: {\n                  family: \"Courier New, monospace\",\n                  size: 16,\n                },\n              },\n            },\n\n            plot_bgcolor: \"#F5F5F5\",\n            // paper_bgcolor: \"\",\n\n            plot_height: 300,\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div style={{ marginLeft: \"48%\", padding: \"2%\" }}>{props.text}</div>\n      </div>\n    </>\n  );\n}\n\nexport default MetricGraph;\n\n// import React from \"react\";\n// import Highcharts from \"highcharts\";\n// import HighchartsReact from \"highcharts-react-official\";\n\n// function MetricGraph(props) {\n//   console.log(props.metValue, \"graph value\");\n//   console.log(props.metTime, \"graph time\");\n//   const options = {\n//     xAxis: {\n//       categories: [1, 2, 3],\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 3],\n//       },\n//     ],\n//     // events: {\n//     //   load: function () {\n//     //     // set up the updating of the chart each second\n//     //     var series = this.series[0];\n//     //     var x = new Date(props.time * 1000).toISOString().substr(14, 5);\n//     //     var y = props.value;\n//     //     series.addPoint([x, y], true, true);\n//     //   },\n//     // },\n//   };\n\n//   return (\n//     <div>\n//       <HighchartsReact highcharts={Highcharts} options={options} />\n//       <h1>{/* {props.value},{props.time} */}</h1>\n//     </div>\n//   );\n// }\n\n// export default MetricGraph;\n"],"mappings":"0RAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,OAAP,KAAmB,sBAAnB,CACA,MAAOC,sBAAP,KAAkC,yBAAlC,CACA,MAAO,mBAAP,C,6IAEA,GAAMC,KAAI,CAAGD,qBAAqB,CAACD,MAAD,CAAlC,CACA,SAAgC,EAAhC,8BAAOG,QAAP,UAAiBC,WAAjB,UAEA,QAASC,YAAT,CAAqBC,KAArB,CAA4B,WAC1B,mBACE,sCACE,aAAK,KAAK,CAAC,OAAX,wBACE,KAAC,IAAD,EACE,IAAI,CAAE,kBAEFC,CAAC,CAAED,KAAK,CAACE,OAFP,CAGFC,CAAC,CAAEH,KAAK,CAACI,SAHP,CAIFC,aAAa,CAAE,gBAJb,CAKFC,IAAI,CAAEN,KAAK,CAACO,QALV,CAMFC,UAAU,CAAE,KANV,CAOFC,IAAI,CAAE,SAPJ,CAQFC,IAAI,CAAE,MARJ,CAUFC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CAVN,CAWFC,IAAI,CAAE,CAAEC,KAAK,CAAE,QAAT,CAAmBC,SAAS,CAAE,GAA9B,CAXJ,WAYM,CAAEC,KAAK,CAAE,SAAT,CAAoBC,IAAI,CAAE,GAA1B,CAZN,EADR,CAgBE,MAAM,SACJC,CAAC,CAAE,CADC,CAEJC,OAAO,CAAE,MAFL,CAGJC,KAAK,CAAE,iBAHH,CAIJC,KAAK,CAAE,GAJH,CAKJC,MAAM,CAAE,GALJ,CAMJC,MAAM,CAAE,CAAEC,CAAC,CAAE,EAAL,CAASC,CAAC,CAAE,EAAZ,CAAgBC,CAAC,CAAE,EAAnB,CAAuBC,CAAC,CAAE,EAA1B,CAA8BC,GAAG,CAAE,CAAnC,CANJ,gCAOG,KAPH,+BAQE,GARF,+BAUE,UAVF,uCAWU,EAXV,gCAYG,CACLC,SAAS,CAAE,IADN,CAELT,KAAK,CAAE,CACLd,IAAI,CAAE,SADD,CAELwB,IAAI,CAAE,CACJC,MAAM,CAAE,wBADJ,CAEJd,IAAI,CAAE,EAFF,CAFD,CAOP;AACA;AACA;AACA;AACA;AAbK,CAZH,gCA4BG,CACLG,KAAK,CAAE,CACLd,IAAI,CAAEN,KAAK,CAACgC,IADP,CAELF,IAAI,CAAE,CACJC,MAAM,CAAE,wBADJ,CAEJd,IAAI,CAAE,EAFF,CAFD,CADF,CA5BH,uCAsCU,SAtCV,sCAyCS,GAzCT,QAhBR,CA2DE,MAAM,CAAE,CAAEgB,cAAc,CAAE,KAAlB,CA3DV,EADF,cA8DE,YAAK,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAqBC,OAAO,CAAE,IAA9B,CAAZ,UAAmDnC,KAAK,CAACM,IAAzD,EA9DF,GADF,EADF,CAoED,CAED,cAAeP,YAAf,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}